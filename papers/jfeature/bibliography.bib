@article{DBLP:journals/cacm/Knuth74,
  author    = {Donald E. Knuth},
  title     = {{Computer Programming as an Art}},
  journal   = {Commun. {ACM}},
  volume    = {17},
  number    = {12},
  pages     = {667--673},
  year      = {1974},
  doi       = {10.1145/361604.361612},
  timestamp = {Tue, 07 Jun 2011 16:50:57 +0200},
  biburl    = {http://dblp.uni-trier.de/rec/bib/journals/cacm/Knuth74},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@article{DBLP:journals/cacm/Dijkstra68a,
  author    = {Edsger W. Dijkstra},
  title     = {Letters to the editor: go to statement considered harmful},
  journal   = {Commun. {ACM}},
  volume    = {11},
  number    = {3},
  pages     = {147--148},
  year      = {1968},
  doi       = {10.1145/362929.362947},
  timestamp = {Thu, 09 Feb 2006 13:19:49 +0100},
  biburl    = {http://dblp.uni-trier.de/rec/bib/journals/cacm/Dijkstra68a},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@book{DBLP:books/mk/GrayR93,
  author    = {Jim Gray and
               Andreas Reuter},
  title     = {Transaction Processing: Concepts and Techniques},
  publisher = {Morgan Kaufmann},
  year      = {1993},
  isbn      = {1-55860-190-2},
  timestamp = {Thu, 05 Nov 2015 19:53:28 +0100},
  biburl    = {http://dblp.uni-trier.de/rec/bib/books/mk/GrayR93},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}



@inproceedings{DBLP:conf/focs/HopcroftPV75,
  author    = {{John E.} Hopcroft and
               {Wolfgang J.} Paul and
               {Leslie G.} Valiant},
  title     = {On Time versus Space and Related Problems},
  booktitle = {16th Annual Symposium on Foundations of Computer Science, Berkeley,
               California, USA, October 13-15, 1975},
  pages     = {57--64},
  year      = {1975},
  crossref  = {DBLP:conf/focs/FOCS16},
  doi       = {10.1109/SFCS.1975.23},
  timestamp = {Tue, 16 Dec 2014 09:57:24 +0100},
  biburl    = {http://dblp.uni-trier.de/rec/bib/conf/focs/HopcroftPV75},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@proceedings{DBLP:conf/focs/FOCS16,
  title     = {16th Annual Symposium on Foundations of Computer Science, Berkeley,
               California, USA, October 13-15, 1975},
  publisher = {{IEEE} Computer Society},
  year      = {1975},
  timestamp = {Mon, 15 Dec 2014 18:48:44 +0100},
  biburl    = {http://dblp.uni-trier.de/rec/bib/conf/focs/FOCS16},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}





@article{a42d66bd599e4d45b783a5de8b652497,
  title     = {Circular Reference Attributed Grammars - their Evaluation and Applications},
  abstract  = {This paper presents a combination of Reference Attributed Grammars (RAGs) and Circular Attribute Grammars (CAGs). While RAGs allow the direct and easy specification of non-locally dependent information, CAGs allow iterative fixed-point computations to be expressed directly using recursive (circular) equations. We demonstrate how the combined formalism, Circular Reference Attributed Grammars (CRAGs), can take advantage of both these strengths, making it possible to express solutions to many problems in an easy way. We exemplify with the specification and computation of the nullable, first, and follow sets used in parser construction, a problem which is highly recursive and normally programmed by hand using an iterative algorithm. We also present a general demand-driven evaluation algorithm for CRAGs and some optimizations of it. The approach has been implemented and experimental results include computations on a series of grammars including that of Java 1.2. We also revisit some of the classical examples of CAGs and show how their solutions are facilitated by CRAGs.},
  keywords  = {fixed-point computations, Attribute grammars, Circular grammars},
  author    = {Eva Magnusson and G{\"o}rel Hedin},
  year      = {2007},
  doi       = {10.1016/j.scico.2005.06.005},
  language  = {English},
  volume    = {68},
  pages     = {21--37},
  journal   = {Science of Computer Programming},
  issn      = {0167-6423},
  publisher = {Elsevier},
  number    = {1}
}


@inproceedings{deroover2011soul,
  author    = {De Roover, Coen and Noguera, Carlos and Kellens, Andy and Jonckers, Vivane},
  title     = {The SOUL Tool Suite for Querying Programs in Symbiosis with Eclipse},
  year      = {2011},
  isbn      = {9781450309356},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/2093157.2093168},
  booktitle = {Proceedings of the 9th International Conference on Principles and Practice of Programming in Java},
  pages     = {71--80},
  numpages  = {10},
  keywords  = {logic programming, program analysis, integrated development environments, program queries, software engineering tools},
  location  = {Kongens Lyngby, Denmark},
  series    = {PPPJ '11}
}

@inproceedings{bodden2012inter,
  title     = {Inter-procedural data-flow analysis with ifds/ide and soot},
  author    = {Bodden, Eric},
  booktitle = {Proceedings of the ACM SIGPLAN International Workshop on State of the Art in Java Program analysis},
  pages     = {3--8},
  year      = {2012}
}


@article{szabo2018inca,
  author     = {Szab\'{o}, Tam\'{a}s and Bergmann, G\'{a}bor and Erdweg, Sebastian and Voelter, Markus},
  title      = {Incrementalizing Lattice-Based Program Analyses in Datalog},
  year       = {2018},
  issue_date = {November 2018},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {2},
  number     = {OOPSLA},
  url        = {https://doi.org/10.1145/3276509},
  doi        = {10.1145/3276509},
  abstract   = {Program analyses detect errors in code, but when code changes frequently as in an IDE, repeated re-analysis from-scratch is unnecessary: It leads to poor performance unless we give up on precision and recall. Incremental program analysis promises to deliver fast feedback without giving up on precision or recall by deriving a new analysis result from the previous one. However, Datalog and other existing frameworks for incremental program analysis are limited in expressive power: They only support the powerset lattice as representation of analysis results, whereas many practically relevant analyses require custom lattices and aggregation over lattice values. To this end, we present a novel algorithm called DRedL that supports incremental maintenance of recursive lattice-value aggregation in Datalog. The key insight of DRedL is to dynamically recognize increasing replacements of old lattice values by new ones, which allows us to avoid the expensive deletion of the old value. We integrate DRedL into the analysis framework IncA and use IncA to realize incremental implementations of strong-update points-to analysis and string analysis for Java. As our performance evaluation demonstrates, both analyses react to code changes within milliseconds.},
  journal    = {Proc. ACM Program. Lang.},
  month      = oct,
  articleno  = {139},
  numpages   = {29},
  keywords   = {Incremental Computing, Static Analysis, Domain-Specific Language, Lattice, Datalog, Language Workbench}
}



@inproceedings{visser2002concretesyntax,
  author    = {Visser, Eelco},
  title     = {Meta-Programming with Concrete Object Syntax},
  year      = {2002},
  isbn      = {3540442847},
  publisher = {Springer-Verlag},
  address   = {Berlin, Heidelberg},
  abstract  = {Meta programs manipulate structured representations, i.e., abstract syntax trees, of programs. The conceptual distance between the concrete syntax meta-programmers use to reason about programs and the notation for abstract syntax manipulation provided by general purpose (meta-) programming languages is too great for many applications. In this paper it is shown how the syntax definition formalism SDF can be employed to fit any meta-programming language with concrete syntax notation for composing and analyzing object programs. As a case study, the addition of concrete syntax to the program transformation language Stratego is presented. The approach is then generalized to arbitrary meta-languages.},
  booktitle = {Proceedings of the 1st ACM SIGPLAN/SIGSOFT Conference on Generative Programming and Component Engineering},
  pages     = {299â€“315},
  numpages  = {17},
  series    = {GPCE '02}
}



@inproceedings{lattner2004llvm,
  title        = {LLVM: A compilation framework for lifelong program analysis \& transformation},
  author       = {Lattner, Chris and Adve, Vikram},
  booktitle    = {International Symposium on Code Generation and Optimization, 2004. CGO 2004.},
  pages        = {75--86},
  year         = {2004},
  organization = {IEEE}
}


@inproceedings{just2014defects4j,
  title     = {{Defects4J: A database of existing faults to enable controlled testing studies for Java programs}},
  author    = {Just, Ren{\'e} and Jalali, Darioush and Ernst, Michael D},
  booktitle = {Proceedings of the 2014 International Symposium on Software Testing and Analysis},
  pages     = {437--440},
  year      = {2014}
}


@inproceedings{QualitasCorpus:APSEC:2010,
  author    = {Tempero, Ewan and Anslow, Craig and Dietrich, Jens and Han, Ted and Li, Jing and Lumpe, Markus and Melton, Hayden and Noble, James},
  title     = {{Qualitas Corpus: A Curated Collection of Java Code for Empirical Studies}},
  booktitle = {2010 Asia Pacific Software Engineering Conference (APSEC2010)},
  pages     = {336--345},
  month     = dec,
  year      = {2010},
  doi       = {http://dx.doi.org/10.1109/APSEC.2010.46}
}

@article{dietrich2017xcorpus,
  author  = {Jens Dietrich and
             Henrik Schole and
             Li Sui and
             Ewan D. Tempero},
  title   = {{XCorpus - An executable Corpus of Java Programs}},
  journal = {Journal of Object Technology},
  volume  = {16},
  number  = {4},
  pages   = {1:1--24},
  year    = {2017}
}

@inproceedings{lattner2004llvm,
  title        = {LLVM: A compilation framework for lifelong program analysis \& transformation},
  author       = {Lattner, Chris and Adve, Vikram},
  booktitle    = {International Symposium on Code Generation and Optimization, 2004. CGO 2004.},
  pages        = {75--86},
  year         = {2004},
  organization = {IEEE}
}


@inproceedings{riouak2021precise,
  title        = {A Precise Framework for Source-Level Control-Flow Analysis},
  author       = {Riouak, Idriss and Reichenbach, Christoph and Hedin, G{\"o}rel and Fors, Niklas},
  booktitle    = {2021 IEEE 21st International Working Conference on Source Code Analysis and Manipulation (SCAM)},
  pages        = {1--11},
  year         = {2021},
  organization = {IEEE}
}

@article{Spi05g,
  title   = {Tool Writing: A Forgotten Art?},
  author  = {Diomidis Spinellis},
  journal = {IEEE Software},
  issn    = {0740-7459},
  month   = {July/August},
  pages   = {9--11},
  volume  = 22,
  number  = 4,
  year    = 2005,
  doi     = {10.1109/MS.2005.111},
  tags    = {sweng},
  url     = {http://www.spinellis.gr/pubs/jrnl/2005-IEEESW-TotT/html/v22n4.html}
}


@inproceedings{collectionattributes,
  author    = {Magnusson, Eva and Ekman, Torbjorn and Hedin, Gorel},
  booktitle = {Seventh IEEE International Working Conference on Source Code Analysis and Manipulation (SCAM 2007)},
  title     = {Extending Attribute Grammars with Collection Attributes--Evaluation and Applications},
  year      = {2007},
  volume    = {},
  number    = {},
  pages     = {69-80},
  doi       = {10.1109/SCAM.2007.13}
}

@article{blackburn2008wake,
  title     = {Wake up and smell the coffee: Evaluation methodology for the 21st century},
  author    = {Blackburn, Stephen M and McKinley, Kathryn S and Garner, Robin and Hoffmann, Chris and Khan, Asjad M and Bentzur, Rotem and Diwan, Amer and Feinberg, Daniel and Frampton, Daniel and Guyer, Samuel Z and others},
  journal   = {Communications of the ACM},
  volume    = {51},
  number    = {8},
  pages     = {83--89},
  year      = {2008},
  publisher = {ACM New York, NY, USA}
}

@article{costa2019s,
  title     = {What's wrong with my benchmark results? studying bad practices in JMH benchmarks},
  author    = {Costa, Diego and Bezemer, Cor-Paul and Leitner, Philipp and Andrzejak, Artur},
  journal   = {IEEE Transactions on Software Engineering},
  volume    = {47},
  number    = {7},
  pages     = {1452--1467},
  year      = {2019},
  publisher = {IEEE}
}

@inproceedings{reichenbach2010can,
  author    = {Christoph Reichenbach and
               Neil Immerman and
               Yannis Smaragdakis and
               Edward Aftandilian and
               Samuel Z. Guyer},
  title     = {{What can the {GC} compute efficiently?: A language for heap assertions
               at {GC} time}},
  booktitle = {Proceedings of the 25th Annual {ACM} {SIGPLAN} Conference on Object-Oriented
               Programming, Systems, Languages, and Applications, {OOPSLA} 2010,
               October 17-21, 2010, Reno/Tahoe, Nevada, {USA}},
  pages     = {256--269},
  publisher = {{ACM}},
  year      = {2010}
}

@inproceedings{dura2021javadl,
  author    = {Alexandru Dura and Christoph Reichenbach and Emma S{\"o}derberg},
  booktitle = {Proceedings of the ACM on Programming Languages},
  doi       = {10.1145/3485542},
  issue     = {OOPSLA 2021},
  location  = {Virtual},
  month     = {Sep},
  publisher = {ACM},
  title     = {{JavaDL: Automatically Incrementalizing Java Bug Pattern Detection}},
  year      = {2021}
}

@inproceedings{jCT,
  author    = {Lumpe, Markus and Mahmud, Samiran and Goloshchapova, Olga},
  booktitle = {2011 26th IEEE/ACM International Conference on Automated Software Engineering (ASE 2011)},
  title     = {{jCT: A Java Code Tomograph}},
  year      = {2011},
  volume    = {},
  number    = {},
  pages     = {616-619},
  doi       = {10.1109/ASE.2011.6100139}
}


@inproceedings{merino2015explora,
  title        = {{Explora: A visualisation tool for metric analysis of software corpora}},
  author       = {Merino, Leonel and Lungu, Mircea and Nierstrasz, Oscar},
  booktitle    = {2015 IEEE 3rd Working Conference on Software Visualization (VISSOFT)},
  pages        = {195--199},
  year         = {2015},
  organization = {IEEE}
}


@manual{aniche-ck,
  title  = {Java code metrics calculator (CK)},
  author = {MaurÃ­cio Aniche},
  year   = {2015},
  note   = {Available in https://github.com/mauricioaniche/ck/}
}

@inproceedings{luo_et_al:LIPIcs:2019:10813,
  author    = {Linghui Luo and Julian Dolby and Eric Bodden},
  title     = {{MagpieBridge: A General Approach to Integrating Static Analyses into IDEs and Editors (Tool Insights Paper)}},
  booktitle = {33rd European Conference on Object-Oriented Programming (ECOOP 2019)},
  pages     = {21:1--21:25},
  series    = {Leibniz International Proceedings in Informatics (LIPIcs)},
  isbn      = {978-3-95977-111-5},
  issn      = {1868-8969},
  year      = {2019},
  volume    = {134},
  editor    = {Alastair F. Donaldson},
  publisher = {Schloss Dagstuhl--Leibniz-Zentrum fuer Informatik},
  address   = {Dagstuhl, Germany},
  url       = {http://drops.dagstuhl.de/opus/volltexte/2019/10813},
  urn       = {urn:nbn:de:0030-drops-108139},
  doi       = {10.4230/LIPIcs.ECOOP.2019.21},
  annote    = {Keywords: IDE, Tool Support, Static Analysis, Language Server Protocol}
}

@phdthesis{boyland1996descriptional,
  title  = {Descriptional composition of compiler components},
  author = {Boyland, John Tang},
  year   = {1996},
  school = {University of California, Berkeley}
}
@article{chidamber1994metrics,
  title     = {A metrics suite for object oriented design},
  author    = {Chidamber, Shyam R and Kemerer, Chris F},
  journal   = {IEEE Transactions on software engineering},
  volume    = {20},
  number    = {6},
  pages     = {476--493},
  year      = {1994},
  publisher = {IEEE}
}

@inproceedings{githubCorpus2013,
  author       = {Allamanis, Miltiadis and Sutton, Charles},
  title        = {{Mining Source Code Repositories at Massive Scale using Language Modeling}},
  booktitle    = {The 10th Working Conference on Mining Software Repositories},
  year         = {2013},
  pages        = {207--216},
  organization = {IEEE}
}

@inproceedings{bodden2011tamiflex,
  author    = {E. {Bodden} and A. {Sewe} and J. {Sinschek} and H. {Oueslati} and M. {Mezini}},
  booktitle = {2011 33rd International Conference on Software Engineering (ICSE)},
  title     = {Taming reflection: Aiding static analysis in the presence of reflection and custom class loaders},
  year      = {2011},
  pages     = {241--250},
  doi       = {10.1145/1985793.1985827},
  issn      = {1558-1225},
  month     = {may}
}

@inproceedings{cok2018reasoning,
  title     = {Reasoning about functional programming in Java and C++},
  author    = {Cok, David R},
  booktitle = {Companion Proceedings for the ISSTA/ECOOP 2018 Workshops},
  pages     = {37--39},
  year      = {2018}
}

@article{li2014rfbi,
  acmid      = {2656201},
  address    = {New York, NY, USA},
  articleno  = {7},
  author     = {Li, Kaituo and Reichenbach, Christoph and Csallner, Christoph and Smaragdakis, Yannis},
  doi        = {10.1145/2656201},
  issn       = {1049-331X},
  issue_date = {December 2014},
  journal    = {ACM Trans. Softw. Eng. Methodol.},
  keywords   = {False warnings, RFBI, existing test cases},
  month      = {Dec},
  number     = {2},
  numpages   = {32},
  pages      = {7:1--7:32},
  publisher  = {ACM},
  title      = {Residual Investigation: Predictive and Precise Bug Detection},
  url        = {http://doi.acm.org/10.1145/2656201},
  volume     = {24},
  year       = {2014}
}

@article{smaragdakis2012sound,
  title     = {Sound predictive race detection in polynomial time},
  author    = {Smaragdakis, Yannis and Evans, Jacob and Sadowski, Caitlin and Yi, Jaeheon and Flanagan, Cormac},
  journal   = {ACM Sigplan Notices},
  volume    = {47},
  number    = {1},
  pages     = {387--400},
  year      = {2012},
  publisher = {ACM New York, NY, USA}
}

@misc{java1,
  title     = {{JDK 1.1 New Feature Summary}},
  publisher = {Oracle},
  note      = {{Note:} Available as file jdk1.1.8/docs/relnotes/features.html in zip file for Java Development Kit (JDK) Documentation 1.1 (jdk118-doc.zip) at \url{https://www.oracle.com/java/technologies/java-archive-downloads-javase11-downloads.html} (login needed), {Last accessed: 2022-08-03}},
  key       = {java1}
}

@misc{java2,
  title     = {{Java 2 SDK, Standard Edition, version 1.2. Summary of New Features and Enhancements}},
  publisher = {Oracle},
  note      = {{Note:} Available as file jdk1.2.2.202/docs/relnotes/features.html in zip file for Java 2 SDK, Standard Edition Documentation 1.2.2\_006 (jdk-1\_2\_2\_006-doc.zip) at \url{https://www.oracle.com/java/technologies/java-archive-javase-v12-downloads.html} (login needed), {Last accessed: 2022-08-03}},
  key       = {java2}
}
@misc{java3,
  title     = {{Java 2 SDK, Standard Edition, version 1.3. Summary of New Features and Enhancements}},
  publisher = {Oracle},
  note      = {{Note:} Available as file docs/relnotes/features.html in zip file for Java 2 SDK, Standard Edition Documentation 1.3.1 (java1.3.zip) at \url{https://www.oracle.com/java/technologies/java-archive-13docs-downloads.html} (login needed), {Last accessed: 2022-08-03}},
  key       = {java3}
}

@book{java4,
  title     = {{Java 2 Sdk for Solaris Developer's Guide}},
  year      = {2000},
  publisher = {Sun Microsystems},
  note      = {{ISBN:} 978-14-005-2241-5, {Note: Includes description of New Features and Enhancements for Java 1.4.}},
  key       = {java4}
}

@misc{java5,
  title        = {{New Features and Enhancements. J2SE 5.0}},
  publisher    = {Oracle},
  howpublished = {\url{https://docs.oracle.com/javase/1.5.0/docs/relnotes/features.html}},
  note         = {{Accessed:} 2022-08-03},
  key          = {java5}
}

@misc{java6,
  title        = {{Java SE 6 Features and Enhancements}},
  publisher    = {Oracle},
  howpublished = {\url{https://www.oracle.com/java/technologies/javase/features.html}},
  note         = {{Accessed:} 2022-08-03},
  key          = {java6}
}

@misc{java7,
  title        = {{Java SE 7 Features and Enhancements}},
  publisher    = {Oracle},
  howpublished = {\url{https://www.oracle.com/java/technologies/javase/jdk7-relnotes.html}},
  note         = {{Accessed:} 2022-08-03},
  key          = {java7}
}

@misc{java8,
  title        = {{What's New in JDK 8}},
  publisher    = {Oracle},
  howpublished = {\url{https://www.oracle.com/java/technologies/javase/8-whats-new.html}},
  note         = {{Accessed:} 2022-08-03},
  key          = {java8}
}

@misc{Rust_Query_Guide,
  author = {Rust Programming Language},
  title = {Query Guide},
  howpublished = {\url{https://rustc-dev-guide.rust-lang.org/query.html}},
  url = "\url{https://rustc-dev-guide.rust-lang.org/query.html}",
  year = {2021},
  note = {Accessed: 2023-01-27}
}

@InProceedings{Kiczales1997Aspect,
author="Kiczales, Gregor
and Lamping, John
and Mendhekar, Anurag
and Maeda, Chris
and Lopes, Cristina
and Loingtier, Jean-Marc
and Irwin, John",
editor="Ak{\c{s}}it, Mehmet
and Matsuoka, Satoshi",
title="Aspect-oriented programming",
booktitle="ECOOP'97 --- Object-Oriented Programming",
year="1997",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="220--242",
abstract="We have found many programming problems for which neither procedural nor object-oriented programming techniques are sufficient to clearly capture some of the important design decisions the program must implement. This forces the implementation of those design decisions to be scattered throughout the code, resulting in ``tangled'' code that is excessively difficult to develop and maintain. We present an analysis of why certain design decisions have been so difficult to clearly capture in actual code. We call the properties these decisions address aspects, and show that the reason they have been hard to capture is that they cross-cut the system's basic functionality. We present the basis for a new programming technique, called aspect-oriented programming, that makes it possible to clearly express programs involving such aspects, including appropriate isolation, composition and reuse of the aspect code. The discussion is rooted in systems we have built using aspect-oriented programming.",
isbn="978-3-540-69127-3"
}



@ARTICLE{Shafer2010Oil,
  author={Shafer, Don and Laplante, Phillip A.},
  journal={IT Professional}, 
  title={The BP Oil Spill: Could Software be a Culprit?}, 
  year={2010},
  volume={12},
  number={5},
  pages={6-9},
  doi={10.1109/MITP.2010.136}}


@article{Sawyer1999,
  author = {Sawyer, Kathy},
  journal = {Washington Post},
  pages = {A1},
  title = {Mystery of Orbiter Crash Solved},
  url = {https://www.washingtonpost.com/wp-srv/national/longterm/space/stories/orbiter100199.htm},
  howpublished = {https://www.washingtonpost.com/wp-srv/national/longterm/space/stories/orbiter100199.htm},
  year = {1999},
  note = {Accessed: 2023-01-27},
  date = {1999-10-01},
}

@article{leveson1993investigation,
  title={An investigation of the Therac-25 accidents},
  author={Leveson, Nancy G and Turner, Clark S},
  journal={Computer},
  volume={26},
  number={7},
  pages={18--41},
  year={1993},
  publisher={IEEE}
}

@article{kane2010toyota,
  title={Toyota sudden unintended acceleration},
  author={Kane, Sean and Liberman, Ellen and DiViesti, Tony and Click, Felix},
  journal={Safety Research \& Strategies},
  year={2010}
}


@book{reinders2005vtune,
  title={VTune performance analyzer essentials},
  author={Reinders, James},
  volume={9},
  year={2005},
  publisher={Intel Press Santa Clara}
}

@article{li2018fuzzing,
  title={Fuzzing: a survey},
  author={Li, Jun and Zhao, Bodong and Zhang, Chao},
  journal={Cybersecurity},
  volume={1},
  number={1},
  pages={1--13},
  year={2018},
  publisher={SpringerOpen}
}

@article{Baldoni2018Survey,
author = {Baldoni, Roberto and Coppa, Emilio and Dâ€™elia, Daniele Cono and Demetrescu, Camil and Finocchi, Irene},
title = {A Survey of Symbolic Execution Techniques},
year = {2018},
issue_date = {May 2019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {51},
number = {3},
issn = {0360-0300},
url = {https://doi.org/10.1145/3182657},
doi = {10.1145/3182657},
abstract = {Many security and software testing applications require checking whether certain properties of a program hold for any possible usage scenario. For instance, a tool for identifying software vulnerabilities may need to rule out the existence of any backdoor to bypass a programâ€™s authentication. One approach would be to test the program using different, possibly random inputs. As the backdoor may only be hit for very specific program workloads, automated exploration of the space of possible inputs is of the essence. Symbolic execution provides an elegant solution to the problem, by systematically exploring many possible execution paths at the same time without necessarily requiring concrete inputs. Rather than taking on fully specified input values, the technique abstractly represents them as symbols, resorting to constraint solvers to construct actual instances that would cause property violations. Symbolic execution has been incubated in dozens of tools developed over the past four decades, leading to major practical breakthroughs in a number of prominent software reliability applications. The goal of this survey is to provide an overview of the main ideas, challenges, and solutions developed in the area, distilling them for a broad audience.},
journal = {ACM Comput. Surv.},
month = {may},
articleno = {50},
numpages = {39},
keywords = {concolic execution, static analysis, software testing, Symbolic execution}
}

@inproceedings{cadar2008klee,
  title={Klee: unassisted and automatic generation of high-coverage tests for complex systems programs.},
  author={Cadar, Cristian and Dunbar, Daniel and Engler, Dawson R and others},
  booktitle={OSDI},
  volume={8},
  pages={209--224},
  year={2008}
}

@article{Clarke1999BoundedMC,
  title={Bounded Model Checking},
  author={Clarke, Edmund M. and Grumberg, Orna and Peled, Doron A.},
  journal={Formal Methods in System Design},
  volume={16},
  number={1},
  pages={7--34},
  year={1999},
  publisher={Springer}
}

@inproceedings{bradley2012understanding,
  title={Understanding ic3},
  author={Bradley, Aaron R},
  booktitle={Theory and Applications of Satisfiability Testing--SAT 2012: 15th International Conference, Trento, Italy, June 17-20, 2012. Proceedings 15},
  pages={1--14},
  year={2012},
  organization={Springer}
}

@inproceedings{cavada2014nuxmv,
  title={The nuXmv symbolic model checker},
  author={Cavada, Roberto and Cimatti, Alessandro and Dorigatti, Michele and Griggio, Alberto and Mariotti, Alessandro and Micheli, Andrea and Mover, Sergio and Roveri, Marco and Tonetta, Stefano},
  booktitle={Computer Aided Verification: 26th International Conference, CAV 2014, Held as Part of the Vienna Summer of Logic, VSL 2014, Vienna, Austria, July 18-22, 2014. Proceedings 26},
  pages={334--342},
  year={2014},
  organization={Springer}
}

@book{bertot2013interactive,
  title={Interactive theorem proving and program development: Coqâ€™Art: the calculus of inductive constructions},
  author={Bertot, Yves and Cast{\'e}ran, Pierre},
  year={2013},
  publisher={Springer Science \& Business Media}
}

@book{Nipkow2002Isabelle,
  title={Isabelle/HOL - A Proof Assistant for Higher-Order Logic},
  author={Nipkow, Tobias and Paulson, Lawrence C. and Wenzel, Markus},
  year={2002},
  publisher={Springer}
}


@article{livshits2015defense,
  title={In defense of soundiness: A manifesto},
  author={Livshits, Benjamin and Sridharan, Manu and Smaragdakis, Yannis and Lhot{\'a}k, Ond{\v{r}}ej and Amaral, J Nelson and Chang, Bor-Yuh Evan and Guyer, Samuel Z and Khedker, Uday P and M{\o}ller, Anders and Vardoulakis, Dimitrios},
  journal={Communications of the ACM},
  volume={58},
  number={2},
  pages={44--46},
  year={2015},
  publisher={ACM New York, NY, USA}
}

@inproceedings{reynolds2002separation,
  title={Separation logic: A logic for shared mutable data structures},
  author={Reynolds, John C},
  booktitle={Proceedings 17th Annual IEEE Symposium on Logic in Computer Science},
  pages={55--74},
  year={2002},
  organization={IEEE}
}

@book{hoare1969axiomatic,
title={An axiomatic basis for computer programming},
author={Hoare, C.A.R.},
year={1969},
publisher={Communications of the ACM}
}

@inproceedings{calcagno2011infer,
  title={Infer: An automatic program verifier for memory safety of C programs},
  author={Calcagno, Cristiano and Distefano, Dino},
  booktitle={NASA Formal Methods: Third International Symposium, NFM 2011, Pasadena, CA, USA, April 18-20, 2011. Proceedings 3},
  pages={459--465},
  year={2011},
  organization={Springer}
}

@book{pierce2002types,
  title={Types and programming languages},
  author={Pierce, Benjamin C},
  year={2002},
  publisher={MIT press}
}